; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#include "environment.iss"

#define MyAppName "PyWinstall"
#define MyAppVersion "0.0.1"
#define MyAppPublisher "Parity Parrot"
#define MyAppURL "https://www.parityparrot.com/"
#define MyAppExeName "main.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{518FA4C0-3549-474D-ADDF-5981DF2478A4}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
ArchitecturesInstallIn64BitMode=x64
ChangesEnvironment=yes
AllowNoIcons=yes
LicenseFile=..\LICENSE.txt
PrivilegesRequired=admin
OutputBaseFilename=pywinstall_setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "..\dist\pywince.exe"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "driver\*"; Flags: recursesubdirs; DestDir: "{app}\driver"
Source: "driver\amd64\libusb0.dll"; DestDir: "{sys}"; Flags: replacesameversion restartreplace promptifolder; Check: IsWin64;
Source: "driver\amd64\libusbK.dll"; DestDir: "{sys}"; Flags: replacesameversion restartreplace promptifolder; Check: IsWin64;
Source: "driver\amd64\libusbK.sys"; DestDir: "{sys}\drivers"; Flags: replacesameversion restartreplace promptifolder; Check: IsWin64;

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Code]
procedure CurStepChanged(CurStep: TSetupStep);
begin
    if (CurStep = ssPostInstall) and WizardIsTaskSelected('envPath')
    then EnvAddPath(ExpandConstant('{app}'));
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  Code: Integer;
begin
    if CurUninstallStep = usPostUninstall then begin
      Exec('{app}\driver\dpinst64.exe', '/c /q /se /sw /u {app}\driver\C232HM-DDHSL-0.inf', '', SW_HIDE, ewWaitUntilTerminated, Code);
      Exec('sc', 'delete libusbK', '', SW_HIDE, ewWaitUntilTerminated, Code);
      EnvRemovePath(ExpandConstant('{app}'));
    end;
end;

[Tasks]
Name: "install_usb"; Description: "Install USB driver";
Name: envPath; Description: "Add to PATH variable (You will need to restart for this to take effect)" 

[Run]
Filename: "{app}\driver\dpinst64.exe"; Parameters: "/c /q /se /sw"; StatusMsg: "Installing driver (this may take a few seconds) ..."; Tasks: install_usb; Flags: skipifsilent

[UninstallDelete]
Type: files; Name: "{sys}\libusb0.dll"
Type: files; Name: "{sys}\libusbK.dll"
Type: files; Name: "{sys}\drivers\libusbK.sys"

[UninstallRun]
Filename: "{app}\driver\cleanup.bat"; StatusMsg: "Cleaning up driver keys in registry...";
